/*
 * GA4GH Tool Discovery API
 *
 * Proposed API for GA4GH (Global Alliance for Genomics & Health) tool repositories. A tool consists of a set of container images that are paired with a set of documents. Examples of documents include CWL (Common Workflow Language), WDL (Workflow Description Language), NFL (Nextflow), GXFORMAT2 (Galaxy) or SMK (Snakemake) that describe how to use those images and a set of specifications for those images (examples are Dockerfiles or Singularity recipes) that describe how to reproduce those images in the future. We use the following terminology, a \"container image\" describes a container as stored at rest on a filesystem, a \"tool\" describes one of the triples as described above. In practice, examples of \"tools\" include CWL CommandLineTools, CWL Workflows, WDL workflows, and Nextflow workflows that reference containers in formats such as Docker or Singularity.
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#![allow(unused_imports)]
#![allow(clippy::empty_docs)]
use crate::clients::trs::models;
use serde::{Deserialize, Serialize};

/// ImageData : Describes one container image.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImageData {
    /// A docker registry or a URL to a Singularity registry. Used along with image_name to locate a specific image.
    #[serde(rename = "registry_host", skip_serializing_if = "Option::is_none")]
    pub registry_host: Option<String>,
    /// Used in conjunction with a registry_url if provided to locate images.
    #[serde(rename = "image_name", skip_serializing_if = "Option::is_none")]
    pub image_name: Option<String>,
    /// Size of the container in bytes.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    /// Last time the container was updated.
    #[serde(rename = "updated", skip_serializing_if = "Option::is_none")]
    pub updated: Option<String>,
    /// A production (immutable) tool version is required to have a hashcode. Not required otherwise, but might be useful to detect changes.  This exposes the hashcode for specific image versions to verify that the container version pulled is actually the version that was indexed by the registry.
    #[serde(rename = "checksum", skip_serializing_if = "Option::is_none")]
    pub checksum: Option<Vec<models::Checksum>>,
    #[serde(rename = "image_type", skip_serializing_if = "Option::is_none")]
    pub image_type: Option<models::ImageType>,
}

impl ImageData {
    /// Describes one container image.
    pub fn new() -> ImageData {
        ImageData {
            registry_host: None,
            image_name: None,
            size: None,
            updated: None,
            checksum: None,
            image_type: None,
        }
    }
}

