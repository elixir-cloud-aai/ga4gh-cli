/*
 * GA4GH Tool Discovery API
 *
 * Proposed API for GA4GH (Global Alliance for Genomics & Health) tool repositories. A tool consists of a set of container images that are paired with a set of documents. Examples of documents include CWL (Common Workflow Language), WDL (Workflow Description Language), NFL (Nextflow), GXFORMAT2 (Galaxy) or SMK (Snakemake) that describe how to use those images and a set of specifications for those images (examples are Dockerfiles or Singularity recipes) that describe how to reproduce those images in the future. We use the following terminology, a \"container image\" describes a container as stored at rest on a filesystem, a \"tool\" describes one of the triples as described above. In practice, examples of \"tools\" include CWL CommandLineTools, CWL Workflows, WDL workflows, and Nextflow workflows that reference containers in formats such as Docker or Singularity.
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#![allow(unused_imports)]
#![allow(clippy::empty_docs)]
use crate::clients::trs::models;
use serde::{Deserialize, Serialize};

/// FileWrapper : A file provides content for one of - A tool descriptor is a metadata document that describes one or more tools. - A tool document that describes how to test with one or more sample test JSON. - A containerfile is a document that describes how to build a particular container image. Examples include Dockerfiles for creating Docker images and Singularity recipes for Singularity images 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileWrapper {
    /// The content of the file itself. One of url or content is required.
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// A production (immutable) tool version is required to have a hashcode. Not required otherwise, but might be useful to detect changes. 
    #[serde(rename = "checksum", skip_serializing_if = "Option::is_none")]
    pub checksum: Option<Vec<models::Checksum>>,
    #[serde(rename = "image_type", skip_serializing_if = "Option::is_none")]
    pub image_type: Option<Box<models::FileWrapperImageType>>,
    /// Optional url to the underlying content, should include version information, and can include a git hash.  Note that this URL should resolve to the raw unwrapped content that would otherwise be available in content. One of url or content is required.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl FileWrapper {
    /// A file provides content for one of - A tool descriptor is a metadata document that describes one or more tools. - A tool document that describes how to test with one or more sample test JSON. - A containerfile is a document that describes how to build a particular container image. Examples include Dockerfiles for creating Docker images and Singularity recipes for Singularity images 
    pub fn new() -> FileWrapper {
        FileWrapper {
            content: None,
            checksum: None,
            image_type: None,
            url: None,
        }
    }
}

